<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置关于商品销售表的 MyBatis映射文件 -->
<!-- namespace：必须与对应的接口全类名一致 id:必须与对应接口的某个对应的方法名一致 -->
<mapper namespace="com.dao.SellDAO">
	<resultMap type="sell" id="sellMap">
		<id property="sellid" column="sellid" />
		<result property="sno" column="sno" />
		<result property="goodsid" column="goodsid" />
		<result property="num" column="num" />
		<result property="price" column="price" />
		<result property="total" column="total" />
		<result property="addtime" column="addtime" />
		<result property="manager" column="manager" />
		<result property="memo" column="memo" />
		<result property="goodsname" column="goodsname" />
		<!-- 通过外键关联查询  返回封装Goodsname对象 -->
		<association property="goodsname" column="goodsnameid" select="com.dao.GoodsnameDAO.getGoodsnameById" />
	</resultMap>

	<!-- 商品销售表 插入SQL语句  SellDAO通过ID(insertSell)调用此配置 -->
	<insert id="insertSell" parameterType="sell">  
		insert into sell(sellid  , sno  , goodsid  , num  , price  , total  , addtime  , manager  , memo ) values(#{sellid}  , #{sno}   , #{goodsid}   , #{num}   , #{price}   , #{total}   , #{addtime}   , #{manager}   , #{memo} )
	</insert>

	<!-- 商品销售表 更新SQL语句  SellDAO通过ID(updateSell)调用此配置 -->
	<update id="updateSell" parameterType="sell">
		update sell set  sno=#{sno}  , goodsid=#{goodsid}  , num=#{num}  , price=#{price}  , total=#{total}  , addtime=#{addtime}  , manager=#{manager}  , memo=#{memo}  where sellid=#{sellid}
	</update>

	<!-- 商品销售表 按主键删除SQL语句  SellDAO通过ID(deleteSell)调用此配置 -->
	<delete id="deleteSell" parameterType="String">
		delete from sell where sellid = #{sellid}
	</delete>

	<!-- 商品销售表 查询全部商品销售信息SQL语句  SellDAO通过ID(getAllSell)调用此配置  -->
	<select id="getAllSell" resultMap="sellMap">
		select a.* , b.goodsname  from sell a , goods b  where 1=1 and a.goodsid = b.goodsid  order by sellid desc
	</select>

	<!-- 商品销售表 按主键(sellid)查询SQL语句 SellDAO通过ID(getSellById)调用此配置  -->
	<select id="getSellById" parameterType="String" resultMap="sellMap">
		select a.* , b.goodsname  from sell a , goods b  where 1=1 and a.goodsid = b.goodsid and sellid=#{sellid} order by sellid desc
	</select>

	<!-- 商品销售表 按条件精确查询SQL语句 SellDAO通过ID(getSellByCond)调用此配置  -->
	<select id="getSellByCond" parameterType="sell" resultMap="sellMap">
		select a.* , b.goodsname  from sell a , goods b  where 1=1 and a.goodsid = b.goodsid 
		<if test="sno != null and '' != sno">
			and a.sno = #{sno}  
		</if>
		<if test="goodsid != null and '' != goodsid">
			and a.goodsid = #{goodsid}  
		</if>
		<if test="num != null and '' != num">
			and a.num = #{num}  
		</if>
		<if test="price != null and '' != price">
			and a.price = #{price}  
		</if>
		<if test="total != null and '' != total">
			and a.total = #{total}  
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime = #{addtime}  
		</if>
		<if test="manager != null and '' != manager">
			and a.manager = #{manager}  
		</if>
		<if test="memo != null and '' != memo">
			and a.memo = #{memo}  
		</if>
	</select>

	<!-- 商品销售表 按条件模糊查询SQL语句 SellDAO通过ID(getSellByLike)调用此配置  -->
	<select id="getSellByLike" parameterType="sell" resultMap="sellMap">
		select a.* , b.goodsname  from sell a , goods b  where 1=1 and a.goodsid = b.goodsid 
		<if test="sno != null and '' != sno">
			and a.sno like CONCAT('%', CONCAT(#{sno}, '%'))
		</if>
		<if test="goodsid != null and '' != goodsid">
			and b.goodsname like CONCAT('%', CONCAT(#{goodsid}, '%'))
		</if>
		<if test="num != null and '' != num">
			and a.num like CONCAT('%', CONCAT(#{num}, '%'))
		</if>
		<if test="price != null and '' != price">
			and a.price like CONCAT('%', CONCAT(#{price}, '%'))
		</if>
		<if test="total != null and '' != total">
			and a.total like CONCAT('%', CONCAT(#{total}, '%'))
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
		</if>
		<if test="manager != null and '' != manager">
			and a.manager like CONCAT('%', CONCAT(#{manager}, '%'))
		</if>
		<if test="memo != null and '' != memo">
			and a.memo like CONCAT('%', CONCAT(#{memo}, '%'))
		</if>
	</select>
</mapper>





























